//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/_Project/Code/Scripts/Inputs/PlayerInputs.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputs: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputs()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputs"",
    ""maps"": [
        {
            ""name"": ""MainInputs"",
            ""id"": ""07e70cc9-14ce-44a1-aef1-4ef7f83b9cac"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""740e224e-2901-47b1-974c-d64b04a47a35"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MousePosition"",
                    ""type"": ""Value"",
                    ""id"": ""74407d9d-4822-45d6-94b5-4bc32d6370e0"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""LookAround"",
                    ""type"": ""Value"",
                    ""id"": ""04d8c2f9-9ae9-49cf-b23b-5a5f3fa33472"",
                    ""expectedControlType"": ""Delta"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Mouse1"",
                    ""type"": ""Button"",
                    ""id"": ""ff9bc8da-4068-4e42-bf42-7c1c1a57f124"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Mouse2"",
                    ""type"": ""Button"",
                    ""id"": ""8275e45d-7681-4306-92fe-43405df3b2ac"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MiddleMouse"",
                    ""type"": ""Button"",
                    ""id"": ""19839664-8063-4316-9d99-b6d21d56e443"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseScroll"",
                    ""type"": ""Value"",
                    ""id"": ""5089702d-59e4-460a-ad9f-4978929fdf17"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Shift"",
                    ""type"": ""Button"",
                    ""id"": ""1ea2b2ff-6e72-45f0-81ce-7b567c481573"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Tab"",
                    ""type"": ""Button"",
                    ""id"": ""13c83d8f-2128-4b44-b1fa-356b6d012501"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Escape"",
                    ""type"": ""Button"",
                    ""id"": ""6678e5b9-08fd-4d40-ba08-cbeb13d1a1e8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Control"",
                    ""type"": ""Button"",
                    ""id"": ""c0d336da-4cc0-44eb-ac46-1f49e40855af"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""a99976f9-db45-4644-b159-a4866579b66d"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""76701e3b-54a2-454a-bf3e-4f22faadceb2"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""64a51a43-1b1b-4b18-872f-1b1059fc834b"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""86f8bd9b-524e-4cee-9bbc-d41cd6ce701a"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""9c5e0115-7b09-43f8-ae79-f0f9a016bbbc"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""ArrowKeys"",
                    ""id"": ""0a273c8a-3a4b-45fe-9949-8a4eb8704ff9"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""8a8f677b-62dd-47d1-9da4-02ebf53f0f62"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""7bc08bea-270e-4b54-aa1e-bbf3a626da76"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""65556f64-f1b4-473e-9aa1-18d60ccb47fa"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""3f2bd592-d0d7-45a3-a200-e2304bd3e76c"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""5eb5af34-dc8d-4d64-a2ac-e04a2a475e48"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LookAround"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""854ffb40-2dd8-4ef4-a9b3-e48790f2ad2d"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mouse1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""71578c69-7473-4184-8440-7115f1c13052"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mouse2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9a28e05a-40bc-452e-86f0-11122c29db09"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MiddleMouse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""11d4cc7c-bd2d-4155-abea-af6f054e4551"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseScroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""77eb1638-e06c-4a18-808b-9b49a3ceb5a8"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shift"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""70e239fb-b4cc-4e55-9b93-59a2a97faecd"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Tab"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1fbfd6ab-15a0-496d-bb58-7f729d0d6572"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MousePosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2320ef64-3c18-46ea-b1ef-e5e7f34805f0"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Escape"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1b09baed-144e-41e0-bf90-771c0886544e"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Control"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // MainInputs
        m_MainInputs = asset.FindActionMap("MainInputs", throwIfNotFound: true);
        m_MainInputs_Movement = m_MainInputs.FindAction("Movement", throwIfNotFound: true);
        m_MainInputs_MousePosition = m_MainInputs.FindAction("MousePosition", throwIfNotFound: true);
        m_MainInputs_LookAround = m_MainInputs.FindAction("LookAround", throwIfNotFound: true);
        m_MainInputs_Mouse1 = m_MainInputs.FindAction("Mouse1", throwIfNotFound: true);
        m_MainInputs_Mouse2 = m_MainInputs.FindAction("Mouse2", throwIfNotFound: true);
        m_MainInputs_MiddleMouse = m_MainInputs.FindAction("MiddleMouse", throwIfNotFound: true);
        m_MainInputs_MouseScroll = m_MainInputs.FindAction("MouseScroll", throwIfNotFound: true);
        m_MainInputs_Shift = m_MainInputs.FindAction("Shift", throwIfNotFound: true);
        m_MainInputs_Tab = m_MainInputs.FindAction("Tab", throwIfNotFound: true);
        m_MainInputs_Escape = m_MainInputs.FindAction("Escape", throwIfNotFound: true);
        m_MainInputs_Control = m_MainInputs.FindAction("Control", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // MainInputs
    private readonly InputActionMap m_MainInputs;
    private List<IMainInputsActions> m_MainInputsActionsCallbackInterfaces = new List<IMainInputsActions>();
    private readonly InputAction m_MainInputs_Movement;
    private readonly InputAction m_MainInputs_MousePosition;
    private readonly InputAction m_MainInputs_LookAround;
    private readonly InputAction m_MainInputs_Mouse1;
    private readonly InputAction m_MainInputs_Mouse2;
    private readonly InputAction m_MainInputs_MiddleMouse;
    private readonly InputAction m_MainInputs_MouseScroll;
    private readonly InputAction m_MainInputs_Shift;
    private readonly InputAction m_MainInputs_Tab;
    private readonly InputAction m_MainInputs_Escape;
    private readonly InputAction m_MainInputs_Control;
    public struct MainInputsActions
    {
        private @PlayerInputs m_Wrapper;
        public MainInputsActions(@PlayerInputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_MainInputs_Movement;
        public InputAction @MousePosition => m_Wrapper.m_MainInputs_MousePosition;
        public InputAction @LookAround => m_Wrapper.m_MainInputs_LookAround;
        public InputAction @Mouse1 => m_Wrapper.m_MainInputs_Mouse1;
        public InputAction @Mouse2 => m_Wrapper.m_MainInputs_Mouse2;
        public InputAction @MiddleMouse => m_Wrapper.m_MainInputs_MiddleMouse;
        public InputAction @MouseScroll => m_Wrapper.m_MainInputs_MouseScroll;
        public InputAction @Shift => m_Wrapper.m_MainInputs_Shift;
        public InputAction @Tab => m_Wrapper.m_MainInputs_Tab;
        public InputAction @Escape => m_Wrapper.m_MainInputs_Escape;
        public InputAction @Control => m_Wrapper.m_MainInputs_Control;
        public InputActionMap Get() { return m_Wrapper.m_MainInputs; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MainInputsActions set) { return set.Get(); }
        public void AddCallbacks(IMainInputsActions instance)
        {
            if (instance == null || m_Wrapper.m_MainInputsActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_MainInputsActionsCallbackInterfaces.Add(instance);
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @MousePosition.started += instance.OnMousePosition;
            @MousePosition.performed += instance.OnMousePosition;
            @MousePosition.canceled += instance.OnMousePosition;
            @LookAround.started += instance.OnLookAround;
            @LookAround.performed += instance.OnLookAround;
            @LookAround.canceled += instance.OnLookAround;
            @Mouse1.started += instance.OnMouse1;
            @Mouse1.performed += instance.OnMouse1;
            @Mouse1.canceled += instance.OnMouse1;
            @Mouse2.started += instance.OnMouse2;
            @Mouse2.performed += instance.OnMouse2;
            @Mouse2.canceled += instance.OnMouse2;
            @MiddleMouse.started += instance.OnMiddleMouse;
            @MiddleMouse.performed += instance.OnMiddleMouse;
            @MiddleMouse.canceled += instance.OnMiddleMouse;
            @MouseScroll.started += instance.OnMouseScroll;
            @MouseScroll.performed += instance.OnMouseScroll;
            @MouseScroll.canceled += instance.OnMouseScroll;
            @Shift.started += instance.OnShift;
            @Shift.performed += instance.OnShift;
            @Shift.canceled += instance.OnShift;
            @Tab.started += instance.OnTab;
            @Tab.performed += instance.OnTab;
            @Tab.canceled += instance.OnTab;
            @Escape.started += instance.OnEscape;
            @Escape.performed += instance.OnEscape;
            @Escape.canceled += instance.OnEscape;
            @Control.started += instance.OnControl;
            @Control.performed += instance.OnControl;
            @Control.canceled += instance.OnControl;
        }

        private void UnregisterCallbacks(IMainInputsActions instance)
        {
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @MousePosition.started -= instance.OnMousePosition;
            @MousePosition.performed -= instance.OnMousePosition;
            @MousePosition.canceled -= instance.OnMousePosition;
            @LookAround.started -= instance.OnLookAround;
            @LookAround.performed -= instance.OnLookAround;
            @LookAround.canceled -= instance.OnLookAround;
            @Mouse1.started -= instance.OnMouse1;
            @Mouse1.performed -= instance.OnMouse1;
            @Mouse1.canceled -= instance.OnMouse1;
            @Mouse2.started -= instance.OnMouse2;
            @Mouse2.performed -= instance.OnMouse2;
            @Mouse2.canceled -= instance.OnMouse2;
            @MiddleMouse.started -= instance.OnMiddleMouse;
            @MiddleMouse.performed -= instance.OnMiddleMouse;
            @MiddleMouse.canceled -= instance.OnMiddleMouse;
            @MouseScroll.started -= instance.OnMouseScroll;
            @MouseScroll.performed -= instance.OnMouseScroll;
            @MouseScroll.canceled -= instance.OnMouseScroll;
            @Shift.started -= instance.OnShift;
            @Shift.performed -= instance.OnShift;
            @Shift.canceled -= instance.OnShift;
            @Tab.started -= instance.OnTab;
            @Tab.performed -= instance.OnTab;
            @Tab.canceled -= instance.OnTab;
            @Escape.started -= instance.OnEscape;
            @Escape.performed -= instance.OnEscape;
            @Escape.canceled -= instance.OnEscape;
            @Control.started -= instance.OnControl;
            @Control.performed -= instance.OnControl;
            @Control.canceled -= instance.OnControl;
        }

        public void RemoveCallbacks(IMainInputsActions instance)
        {
            if (m_Wrapper.m_MainInputsActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IMainInputsActions instance)
        {
            foreach (var item in m_Wrapper.m_MainInputsActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_MainInputsActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public MainInputsActions @MainInputs => new MainInputsActions(this);
    public interface IMainInputsActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnMousePosition(InputAction.CallbackContext context);
        void OnLookAround(InputAction.CallbackContext context);
        void OnMouse1(InputAction.CallbackContext context);
        void OnMouse2(InputAction.CallbackContext context);
        void OnMiddleMouse(InputAction.CallbackContext context);
        void OnMouseScroll(InputAction.CallbackContext context);
        void OnShift(InputAction.CallbackContext context);
        void OnTab(InputAction.CallbackContext context);
        void OnEscape(InputAction.CallbackContext context);
        void OnControl(InputAction.CallbackContext context);
    }
}
